version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./manager  
      dockerfile: Dockerfile 
    container_name: manager
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "8080:8080"

  worker1:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker1
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_APPLICATION_NAME: worker1
      SERVER_PORT: 8080

  worker2:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker2
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_APPLICATION_NAME: worker2
      SERVER_PORT: 8080

  # worker3:
  #   build:
  #     context: ./worker
  #     dockerfile: Dockerfile
  #   container_name: worker3
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     SPRING_RABBITMQ_HOST: rabbitmq
  #     SPRING_RABBITMQ_PORT: 5672
  #     SPRING_RABBITMQ_USERNAME: guest
  #     SPRING_RABBITMQ_PASSWORD: guest
  #     SPRING_APPLICATION_NAME: worker3
  #     SERVER_PORT: 8080
